{"version":3,"sources":["pages sync /^/.//.*$","components/navigation.js","page-renderer.js","App.js","serviceWorker.js","index.js","pages/blog.js","pages/contact-us.js","pages/login.js","components/common/masonry-post.js","components/common/post-masonry.js","components/common/post-grid.js","components/common/styles.js","components/common/tag-row.js","assets/mocks/trending.js","assets/mocks/featured.js","pages/home.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","navLinks","title","path","Navigation","user","useState","menuActive","setMenuActive","className","link","index","to","src","size","firstName","lastName","onClick","PageRenderer","page","React","createElement","require","default","err","console","warn","generatePage","useRouteMatch","params","App","component","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","Blog","ContactUs","Login","MasonryPost","post","tagsOnTop","windowWidth","innerWidth","imageBackground","backgroundImage","image","style","href","justifyContent","TagRow","tags","categories","date","PostMasonry","posts","columns","gridTemplateColumns","key","PostGrid","pageSize","setPageSize","current","setCurrent","paginatedPosts","useMemo","lastIndex","firstIndex","slice","useEffect","scroll","top","left","behavior","alt","author","description","simple","showSizeChanger","onShowSizeChange","total","length","defaultCurrent","onChange","categoryColors","Vue","JavaScript","Cloud","tag","ind","backgroundColor","toUpperCase","moment","format","mergeStyles","config","forEach","recentPosts","trending","featured","1","gridArea","0","height","3","marginLeft","width","lastFeatured","pop","Home"],"mappings":"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","file":"static/js/main.37b173bb.chunk.js","sourcesContent":["var map = {\n\t\"./blog\": 68,\n\t\"./blog.js\": 68,\n\t\"./contact-us\": 69,\n\t\"./contact-us.js\": 69,\n\t\"./home\": 71,\n\t\"./home.js\": 71,\n\t\"./login\": 70,\n\t\"./login.js\": 70\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 107;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport {Avatar} from 'antd';\n\n    \nconst navLinks = [\n    {\n        title : 'Home',\n        path : '/'\n    },\n    {\n        title : 'Blog',\n        path : '/blog'\n    },\n    {\n        title : 'Contact Us',\n        path : '/contact-us'\n    },\n    {\n        title : 'Login',\n        path : '/login'\n    }\n]\n\nexport default function Navigation ({user}) {\n    const [menuActive, setMenuActive] = useState(false)\n    return (\n        <nav className=\"site-navigation\">\n            <span className=\"menu-title\">\n                blogOsphere\n            </span>\n            <div className={`menu-content-container ${menuActive && 'active'}`}>\n                <ul>\n                    { navLinks.map((link, index) => (\n                        <li key={index}>\n                            <Link to={link.path}>{link.title}</Link>\n                        </li>\n                    ))}\n                </ul>\n                <span className=\"menu-avatar-container\">\n                    <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" size={38}/>\n                    <span className=\"menu-avatar-name\">{`${user.firstName} ${user.lastName}`}</span>\n                </span>\n            </div>\n            <i className=\"ionicons icon ion-ios-menu\" onClick={() => setMenuActive(!menuActive)} />\n        </nav>\n    )\n}","import React from 'react';\nimport { useRouteMatch } from 'react-router-dom';\n\nconst generatePage = page => {\n    const component = () => require(`./pages/${page}`).default\n\n    try {\n        return React.createElement(component())\n    } catch (err) {\n        console.warn(err)\n        return React.createElement(() => 404)\n    }\n}\nexport default function PageRenderer () {\n    const {\n        params : { page }\n    } = useRouteMatch()\n\n    return generatePage(page)\n}","import React from 'react';\nimport Navigation from './components/navigation';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport PageRenderer from './page-renderer';\nimport './assets/scss/base.scss';\n\n\nfunction App() {\n  const user = {\n    firstName: 'Blog',\n    lastName: 'Sphere'\n  }\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navigation user={user}/>\n        <Switch>\n          <Route path=\"/:page\" component={PageRenderer} />\n          <Route path=\"/\" render={() => <Redirect to =\"/home\" /> } />\n          <Route component={() => 404} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' },\n    })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then(registration => {\n          registration.unregister();\n        })\n        .catch(error => {\n          console.error(error.message);\n        });\n    }\n  }\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorker';\nimport 'antd/dist/antd.css';\nimport '@quasar/extras/ionicons-v4/ionicons-v4.css';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// reportWebVitals();\n\nserviceWorker.unregister();","import React from 'react';\n\nexport default function Blog () {\n    return (\n        <div>\n            Blog\n        </div>\n    )\n}","import React from 'react';\n\nexport default function ContactUs () {\n    return (\n        <div>\n            Contact Us\n        </div>\n    )\n}","import React from 'react';\n\nexport default function Login () {\n    return (\n        <div>\n            Login\n        </div>\n    )\n}","import React from 'react';\nimport { TagRow } from './';\n\nexport default function MasonryPost ({post, tagsOnTop}) {\n    const windowWidth = window.innerWidth\n    const imageBackground = {backgroundImage: `url(/images/${post.image})`}\n    const style = windowWidth > 900 ? {...imageBackground, ...post.style} : imageBackground\n    // const style = {backgroundImage: `url(\"https://www.dotcom-monitor.com/blog/wp-content/uploads/sites/3/2020/05/reactjs-logo.png\")`}\n    return (\n        <a className=\"masonry-post overlay\"  style={style} href={post.link}>\n            <div className=\"image-text\" style={{justifyContent: tagsOnTop ? 'space-between' : 'flex-end'}}>\n                <TagRow tags={post.categories} />\n                <div>\n                    <h2 className=\"image-title\">{post.title}</h2>\n                    <span className=\"image-date\">{post.date}</span>\n                    {/* <img src=\"https://www.dotcom-monitor.com/blog/wp-content/uploads/sites/3/2020/05/reactjs-logo.png\" /> */}\n                \n                    {/* <img src=\"react_logo.png\" /> */}\n                </div>\n            </div>\n        </a>\n    )\n}","import React from 'react';\nimport { MasonryPost } from './';\n\nexport default function PostMasonry ({posts, columns, tagsOnTop}) {\n    return (\n        <section className=\"masonry\" style={{gridTemplateColumns: `repeat(${columns}, minmax(275px, 1fr))`}}>\n            {posts.map((post, index) => \n                <MasonryPost {...{post, index, tagsOnTop, key: index}} />\n            )}\n        </section>\n    )\n}","import React, {useState, useEffect, useMemo} from 'react';\nimport {Link} from 'react-router-dom';\nimport {Pagination} from 'antd';\nimport { TagRow } from './';\n\n\nexport default function PostGrid ({posts}) {\n    const [pageSize, setPageSize] = useState(9)\n    const [current, setCurrent] = useState(1)\n    \n    const paginatedPosts = useMemo(() => {\n        const lastIndex = current * pageSize\n        const firstIndex = lastIndex - pageSize\n\n        return posts.slice(firstIndex, lastIndex)\n    }, [current, pageSize, posts])\n\n    useEffect(() => {\n        window.scroll({\n            top: 500,\n            left: 0,\n            behavior: 'smooth',\n        })\n    }, [current, pageSize])\n\n    return (\n        <section className=\"grid-pagination-container\">\n            <section className=\"post-grid container\">\n                {paginatedPosts.map((post, index) => (\n                    <div className=\"post-container\">\n                        <figure>\n                            <Link to={post.link}>\n                                <img src={(`/images/${post.image}`)} alt={post.image} />\n                            </Link>\n                        </figure>\n                        <TagRow tags={post.categories} />\n                        <h2>{post.title}</h2>\n                        <p className=\"author-text\">\n                            <span>\n                                By: \n                                <Link to={`/authors/${post.author}`} >\n                                    {post.author}\n                                </Link>\n                            </span>\n                            <span>\n                                - {post.date}\n                            </span>\n                        </p>\n                        <p className=\"description-text\">\n                            {post.description}\n                        </p>\n                        <Link to={post.link}>Read More...</Link>\n                    </div>\n                ))}\n            </section>\n            <Pagination \n                simple \n                showSizeChanger \n                onShowSizeChange={setPageSize} \n                pageSize={pageSize}\n                total={posts.length}\n                defaultCurrent={current}\n                onChange = {setCurrent}\n                />\n        </section>\n    )\n}","const categoryColors = {\n    'Tech Culture': 'rgb(255,59,48)',\n    'Tech News': 'rgb(0,113,164)',\n    'Brain Health': 'rgb(255,45,85)',\n    Vue: 'rgb(52,199,89)',\n    React: 'rgb(64, 156, 255)',\n    JavaScript: 'rgb(255,179,64)',\n    Cloud: 'rgb(175,82,250)'\n}\n\nexport {\n    categoryColors\n}","import React from 'react';\nimport { categoryColors } from './styles';\n\nexport default function TagRow ({tags}) {\n    return (\n        <div className=\"tags-container\">\n            { tags.map((tag, ind) => \n                <span key={ind} className=\"tag\" style={{backgroundColor : categoryColors[tag]}}>\n                    {tag.toUpperCase()}\n                </span>\n            )}\n        </div>\n    )\n}","import moment from 'moment'\n\nexport default [\n    {\n        title: 'Software Engineer Salary in 2020',\n        date: moment().format('MMMM DD, YYYY'),\n        categories: ['Tech Culture'],\n        link: '#',\n        image: 'money.jpeg'\n    },\n    {\n        title: 'GraphQL vs REST',\n        date: moment().format('MMMM DD, YYYY'),\n        categories: ['React', 'JavaScript'],\n        link: '#',\n        image: 'laptop.jpg',\n    },\n    {\n        title: 'A Day in the Life of a Programmer',\n        date: moment().format('MMMM DD, YYYY'),\n        categories: ['Tech Culture'],\n        link: '#',\n        image: 'programming_languages.jpeg'\n    },\n    {\n        title: 'The future of cryptocurrency',\n        date: moment().format('MMMM DD, YYYY'),\n        categories: ['Brain Health'],\n        link: '#',\n        image: 'cryptocurrency.jpeg'\n    },\n    {\n        title: 'AWS- the most secure place for your data',\n        date: moment().format('MMMM DD, YYYY'),\n        categories: ['Cloud'],\n        link: '#',\n        image: 'aws.png',\n    },\n]","import moment from 'moment'\n\nexport default [\n    {\n        title: 'Coding for everybody',\n        date: moment().format('MMMM DD, YYYY'),\n        categories: ['Tech Culture', 'Tech News'],\n        link: '#',\n        image: 'coding.png',\n    },\n    {\n        title: 'React Vs Vue',\n        date: moment().format('MMMM DD, YYYY'),\n        categories: ['React', 'Vue'],\n        link: '#',\n        image: 'react.jpeg'\n    },\n    {\n        title: 'Popular Programming Languages in 2020',\n        date: moment().format('MMMM DD, YYYY'),\n        categories: ['Tech News', 'Tech Culture'],\n        link: '#',\n        image: 'puzzled_programmer.jpeg'\n    },\n    {\n        title: 'DNA-the universal blueprint of life',\n        date: moment().format('MMMM DD, YYYY'),\n        categories: ['Brain Health'],\n        link: '#',\n        image: 'dna.jpeg'\n    },\n]","import React from 'react';\nimport { MasonryPost, PostMasonry, PostGrid } from '../components/common';\nimport trending from '../assets/mocks/trending';\nimport featured from '../assets/mocks/featured';\n\n\nconst trendingConfig = {\n    1: {\n        gridArea: '1 / 2 / 3 / 3',\n    }\n}\n\nconst featuredConfig = {\n    0: {\n        gridArea: '1 / 1 / 2 / 3',\n        height: '300px',\n    },\n\n    1: {\n        height: '300px'\n    },\n    3: {\n        height: '630px',\n        marginLeft: '30px',\n        width: '630px'\n    }\n}\n\nconst mergeStyles = (posts, config) => {\n    posts.forEach((post, index) => {\n        post.style = config[index]\n        post.author = 'Blog Sphere'\n        post.description = 'Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry standard dummy text ever since the 1500s, '\n    })\n}\n\nconst recentPosts = [...trending, ...featured, ...featured]\n\nmergeStyles(trending, trendingConfig);\nmergeStyles(featured, featuredConfig);\n\nconst lastFeatured = featured.pop();\n\nexport default function Home () {\n    return (\n        <main className=\"home\">\n            <section className=\"container\">\n                <div className=\"row\">\n                    <h1>Featured Posts</h1>\n                    <section className=\"featured-posts-container\">\n                        <PostMasonry posts={featured} columns={2} tagsOnTop={true} />\n                        <MasonryPost post={lastFeatured} tagsOnTop={true} />\n                    </section>\n                </div>\n            </section>\n            <section className=\"bg-white\">\n                <section className=\"container\">\n                    <div className=\"row\">\n                        <h1>Recent Posts</h1>\n                        <PostGrid posts={recentPosts} />\n                    </div>\n                </section>\n            </section>\n            <section className=\"container\">\n                <div className=\"row\">\n                    <h1>Trending Posts</h1>\n                    <PostMasonry posts={trending} columns={3} />\n                </div>\n            </section>\n        </main>\n    )\n}"],"sourceRoot":""}